version: '3.1'

services:

  nginx:
    image: owasp/modsecurity-crs:nginx
    restart: always
    env_file: ./.env
    ports:
      - $HOST_NGINX_PORT:$CONTAINER_NGINX_PORT
    volumes:
     - ./nginx:/nginx
     - ./nginx/conf.d/modsecurity.conf:/etc/nginx/conf.d/modsecurity.conf
     - $HOST_WEBROOT_DIR:$CONTAINER_WEBROOT_DIR
     - $HOST_NEXTCLOUD_DATA_DIR:$CONTAINER_NEXTCLOUD_DATA_DIR
     - nextcloud_var_run:/var/run
    tmpfs:
     - /var/cache/nginx/fastcgi_cache
     - /var/cache/nginx/fastcgi_temp
    command: >
     /bin/sh -c "envsubst '$$NGINX_USER' < /nginx/nginx.conf.template > /etc/nginx/nginx.conf && 
     envsubst '$$NGINX_SERVER_NAME$$NGINX_WWW_SERVER_NAME$$CONTAINER_WEBROOT_DIR' < /nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf &&
     echo 'SecRuleRemoveById 200002'        >  /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 200003'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 911100'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 920420'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 921110'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 941100'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 941130'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRuleRemoveById 949110'        >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     echo 'SecRequestBodyLimit 536870912'   >> /etc/modsecurity.d/owasp-crs/rules/zz-nextcloud.conf &&
     envsubst < /etc/nginx/templates/modsecurity.d/setup.conf.template > /etc/modsecurity.d/setup.conf &&
     envsubst < /etc/nginx/templates/modsecurity.d/modsecurity-override.conf.template > /etc/modsecurity.d/modsecurity-override.conf &&
     nginx -g 'daemon off;'"
    links:
     - nextcloud

  nextcloud:
    build:
      context: php-fpm
      args:
       - NGINX_USER=$NGINX_USER
       - NGINX_GROUP=$NGINX_GROUP
       - CONTAINER_WEBROOT_DIR=$CONTAINER_WEBROOT_DIR
       - NGINX_SERVER_NAME=$NGINX_SERVER_NAME
       - PHP_SESSION_DIR=$PHP_SESSION_DIR
       - PHP_INI_DIR=$PHP_INI_DIR
       - NEXTCLOUD_VER=$NEXTCLOUD_VER
    restart: always
    env_file: ./.env
    volumes:
     - $HOST_WEBROOT_DIR:$CONTAINER_WEBROOT_DIR
     - $HOST_NEXTCLOUD_DATA_DIR:$CONTAINER_NEXTCLOUD_DATA_DIR
     - nextcloud_var_run:/var/run
    command: >
     /bin/sh -c "echo 'apc.enable = 1' >> ${PHP_INI_DIR}/conf.d/apcu.ini &&
     echo 'apc.enable_cli = 1' >> ${PHP_INI_DIR}/conf.d/apcu.ini &&
     sed -i -e 's/max_execution_time = 30/max_execution_time = 360/' ${PHP_INI_DIR}/php.ini &&
     sed -i -e 's/memory_limit = 128M/memory_limit = 512M/' ${PHP_INI_DIR}/php.ini &&
     sed -i -e 's/upload_max_filesize = 2M/upload_max_filesize = 512M/' ${PHP_INI_DIR}/php.ini &&
     sed -i -e 's/post_max_size = 8M/post_max_size = 512M/' ${PHP_INI_DIR}/php.ini &&
     sed -i -e 's/session.cache_limiter = nocache/session.cache_limiter = public/' ${PHP_INI_DIR}/php.ini &&
     echo '[www]' > ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'user = ${NGINX_USER}' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'group = ${NGINX_GROUP}' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo '' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'listen = /var/run/php-fpm.sock' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'listen.owner = ${NGINX_USER}' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'listen.group = ${NGINX_GROUP}' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'listen.mode = 660' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo '' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.interned_strings_buffer] = 32' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.max_accelerated_files] = 10000' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.memory_consumption] = 512' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.save_comments] = 1' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.revalidate_freq] = 1' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.file_cache] = /var/lib/php/opcache' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[opcache.interned_strings_buffer] = 64' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[session.save_handler] = files' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_value[session.save_path] = /${PHP_SESSION_DIR}' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo '' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'pm = static' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'pm.max_children = 8' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'pm.max_requests = 500' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo '' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     echo 'php_admin_value[memory_limit] = 512M' >> ${PHP_INI_DIR}-fpm.d/zz-docker.conf &&
     sh /entrypoint.sh"
    links:
     - db

  cron:
    image: rcdailey/nextcloud-cronjob
    restart: always
    env_file: ./.env
    links:
     - nextcloud
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /etc/localtime:/etc/localtime:ro
    environment:
     - NEXTCLOUD_CONTAINER_NAME=nextcloud
     - NEXTCLOUD_PROJECT_NAME=nextcloud-container-fpm

  db:
    image: jsurf/rpi-mariadb:latest
    restart: always
    env_file: ./.env
    volumes:
    - ./db/conf.d:/etc/mysql/conf.d
    - $HOST_MYSQL_DIR:$CONTAINER_MYSQL_DIR
    - nextcloud_var_run:/var/run

volumes:
  nextcloud_var_run:
