server {
	server_name ${NGINX_SERVER_NAME} ${NGINX_WWW_SERVER_NAME};
	listen 80;
	listen [::]:80;

	server_tokens off;

	fastcgi_hide_header X-Powered-By;

	root ${CONTAINER_WEBROOT_DIR};

	location ~ /.well-known {
		allow all;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Enable gzip but do not remove ETag headers
	gzip on;
	gzip_vary on;
	gzip_comp_level 4;
	gzip_min_length 256;
	gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
	gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

	include mime.types;
	types {
		text/javascript js mjs;
	}

	# set max upload size
	client_max_body_size 512M;
	client_body_timeout 360s;
	client_body_buffer_size 128M;

	location ^~ /.well-known {

		location = /.well-known/carddav {
			return 301 /remote.php/dav/;
		}
		location = /.well-known/caldav {
			return 301 /remote.php/dav/;
		}
		location ^~ /.well-known/ {
			return 301 /index.php$uri;
		}
		location /.well-known/acme-challenge {
			try_files $uri $uri/ =404;
		}
		location /.well-known/pki-validation {
			try_files $uri $uri/ =404;
		}

		return 301 /index.php$request_uri;
	}

	location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) {
		return 404;
	}
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
		return 404;
	}

	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;

	location / {
		rewrite ^ /index.php$uri;
	}

	location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
		deny all;
	}
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
		deny all;
	}

	location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|.+\/richdocumentscode_arm64\/proxy|core/templates/40[34])\.php(?:$|/) {
		include fastcgi_params;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		#Avoid sending the security headers twice
		fastcgi_param modHeadersAvailable true;
		fastcgi_param front_controller_active true;
		fastcgi_param PHP_VALUE "auto_prepend_file=/var/www/prepend.php";
		fastcgi_pass unix:/var/run/php-fpm.sock;
		fastcgi_intercept_errors on;
		fastcgi_request_buffering off;
		fastcgi_send_timeout 360;
		fastcgi_read_timeout 360;
		fastcgi_cache wpcache;
		fastcgi_cache_key "$request_method:$scheme://$host$request_uri";
		fastcgi_cache_valid  200 60m;
		set $do_not_cache 0;

		if ($request_method = POST) {
			set $do_not_cache 1;
		}

		if ($query_string != "") {
			set $do_not_cache 1;
		}

		if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
			set $do_not_cache 1;
		}

		if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
			set $do_not_cache 1;
		}

		fastcgi_no_cache     $do_not_cache;
		fastcgi_cache_bypass $do_not_cache;
		add_header X-F-Cache $upstream_cache_status;

		add_header X-Content-Type-Options		"nosniff" 		always;
		add_header X-Robots-Tag				"noindex, nofollow"	always;
		add_header X-Frame-Options			"SAMEORIGIN"		always;
		add_header X-Download-Options			"noopen"		always;
		add_header X-Permitted-Cross-Domain-Policies	"none"			always;
		add_header X-XSS-Protection			"1; mode=block"		always;
		add_header Strict-Transport-Security 		"15552000"		always;
		add_header Referrer-Policy			"no-referrer"		always;
	}

	location ~ ^/(?:updater|ocs-provider)(?:$|/) {
		try_files $uri/ =404;
		index index.php;
	}

	# Adding the cache control header for js and css files
	# Make sure it is BELOW the PHP block
	location ~* \.(?:css|js)$ {
		try_files $uri /index.php$uri$is_args$args;
		add_header Cache-Control "public, max-age=7200";
		# Add headers to serve security related headers (It is intended to
		# have those duplicated to the ones above)
		add_header X-Content-Type-Options nosniff;
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		add_header X-Download-Options noopen;
		add_header X-Permitted-Cross-Domain-Policies none;
		# Optional: Don't log access to assets
		access_log off;
	}

	location ~* \.(?:svg|gif|png|html|ttf|woff2?|ico|jpg|jpeg|mp4)$ {
		try_files $uri /index.php$uri$is_args$args;
		# Optional: Don't log access to other assets
		access_log off;
		expires 60d;
	}

	open_file_cache max=100000 inactive=20s;
	open_file_cache_valid 30s;
	open_file_cache_min_uses 2;
	open_file_cache_errors on;
}
